Command Line Interface Options
==============================


.. std:option:: -h, --help

  -h, --help            show this help message and exit

.. std:option:: -v, --verbosity

  -v VERBOSITY, --verbosity VERBOSITY
                        This controls the action's verbosity in the workflow's logs.
                        Supported options are defined by the `logging-level <logging-levels>`_.
                        This option does not affect the verbosity of resulting
                        thread comments or file annotations.
                        
                        Defaults to level ``10`` (aka  ``logging.DEBUG``).

.. std:option:: -p, --database

  -p DATABASE, --database DATABASE
                        The path that is used to read a compile command database.
                        For example, it can be a CMake build directory in which a file named
                        compile_commands.json exists (set ``CMAKE_EXPORT_COMPILE_COMMANDS`` to ``ON``).
                        When no build path is specified, a search for compile_commands.json will be
                        attempted through all parent paths of the first input file. See
                        https://clang.llvm.org/docs/HowToSetupToolingForLLVM.html for an
                        example of setting up Clang Tooling on a source tree.

.. std:option:: -s, --style

  -s STYLE, --style STYLE
                        The style rules to use (defaults to ``llvm``).
                        
                        - Set this to ``file`` to have clang-format use the closest relative
                          .clang-format file.
                        - Set this to a blank string (``""``) to disable using clang-format
                          entirely.

.. std:option:: -c, --tidy-checks

  -c TIDY_CHECKS, --tidy-checks TIDY_CHECKS
                        A comma-separated list of globs with optional ``-`` prefix.
                        Globs are processed in order of appearance in the list.
                        Globs without ``-`` prefix add checks with matching names to the set,
                        globs with the ``-`` prefix remove checks with matching names from the set of
                        enabled checks. This option's value is appended to the value of the 'Checks'
                        option in a .clang-tidy file (if any).
                        
                        - It is possible to disable clang-tidy entirely by setting this option to ``'-*'``.
                        - It is also possible to rely solely on a .clang-tidy config file by
                          specifying this option as a blank string (``''``).
                        
                        The defaults is::
                        
                            boost-*,bugprone-*,performance-*,readability-*,portability-*,modernize-*,clang-analyzer-*,cppcoreguidelines-*
                        
                        See also clang-tidy docs for more info.

.. std:option:: -V, --version

  -V VERSION, --version VERSION
                        The desired version of the clang tools to use. Accepted options are
                        strings which can be 8, 9, 10, 11, 12, 13, 14, 15.
                        
                        - Set this option to a blank string (``''``) to use the
                          platform's default installed version.
                        - This value can also be a path to where the clang tools are
                          installed (if using a custom install location). All paths specified
                          here are converted to absolute.
                        
                        Default is a blank string.

.. std:option:: -e, --extensions

  -e EXTENSIONS, --extensions EXTENSIONS
                        The file extensions to analyze.
                        This comma-separated string defaults to::
                        
                            c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx

.. std:option:: -r, --repo-root

  -r REPO_ROOT, --repo-root REPO_ROOT
                        The relative path to the repository root directory. This path is
                        relative to the runner's ``GITHUB_WORKSPACE`` environment variable (or
                        the current working directory if not using a CI runner).
                        
                        The default value is ``.``

.. std:option:: -i, --ignore

  -i IGNORE, --ignore IGNORE
                        Set this option with path(s) to ignore (or not ignore).
                        
                        - In the case of multiple paths, you can use ``|`` to separate each path.
                        - There is no need to use ``./`` for each entry; a blank string (``''``)
                          represents the repo-root path.
                        - This can also have files, but the file's path (relative to
                          the :std:option:`--repo-root`) has to be specified with the filename.
                        - Submodules are automatically ignored. Hidden directories (beginning
                          with a ``.``) are also ignored automatically.
                        - Prefix a path with ``!`` to explicitly not ignore it. This can be
                          applied to a submodule's path (if desired) but not hidden directories.
                        - Glob patterns are not supported here. All asterisk characters (``*``)
                          are literal.

.. std:option:: -l, --lines-changed-only

  -l LINES_CHANGED_ONLY, --lines-changed-only LINES_CHANGED_ONLY
                        This controls what part of the files are analyzed.
                        The following values are accepted:
                        
                        - false: All lines in a file are analyzed.
                        - true: Only lines in the diff that contain additions are analyzed.
                        - diff: All lines in the diff are analyzed (including unchanged
                          lines but not subtractions).
                        
                        Defaults to ``false``.

.. std:option:: -f, --files-changed-only

  -f FILES_CHANGED_ONLY, --files-changed-only FILES_CHANGED_ONLY
                        Set this option to false to analyze any source files in the repo.
                        This is automatically enabled if
                        :std:option:`--lines-changed-only` is enabled.
                        
                        .. note::
                            The ``GITHUB_TOKEN`` should be supplied when running on a
                            private repository with this option enabled, otherwise the runner
                            does not not have the privilege to list the changed files for an event.
                        
                            See `Authenticating with the GITHUB_TOKEN
                            <https://docs.github.com/en/actions/reference/authentication-in-a-workflow>`_
                        
                        Defaults to ``false``.

.. std:option:: -t, --thread-comments

  -t THREAD_COMMENTS, --thread-comments THREAD_COMMENTS
                        Set this option to true or false to enable or disable the use of
                        thread comments as feedback.
                        
                        .. note::
                            To use thread comments, the ``GITHUB_TOKEN`` (provided by
                            Github to each repository) must be declared as an environment
                            variable.
                        
                            See `Authenticating with the GITHUB_TOKEN
                            <https://docs.github.com/en/actions/reference/authentication-in-a-workflow>`_
                        
                        .. hint::
                            If run on a private repository, then this feature is
                            disabled because the GitHub REST API behaves
                            differently for thread comments on a private repository.
                        
                        Defaults to ``false``.

.. std:option:: -a, --file-annotations

  -a FILE_ANNOTATIONS, --file-annotations FILE_ANNOTATIONS
                        Set this option to false to disable the use of
                        file annotations as feedback.
                        
                        Defaults to ``true``.

.. std:option:: -x, --extra-arg

  -x EXTRA_ARG, --extra-arg EXTRA_ARG
                        A string of extra arguments passed to clang-tidy for use as
                        compiler arguments. This can be specified more than once for each
                        additional argument. Recommend using quotes around the value and
                        avoid using spaces between name and value (use ``=`` instead):
                        
                        .. code-block:: shell
                        
                            cpp-linter --extra-arg="-std=c++17" --extra-arg="-Wall"
                        
                        Defaults to ``'[]'``.
